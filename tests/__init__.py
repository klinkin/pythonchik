"""Тестовый пакет для приложения Pythonchik.

Этот пакет содержит комплексный набор тестов для проверки функциональности
приложения Pythonchik. Тесты охватывают все ключевые компоненты системы,
включая ядро, сервисы, обработку ошибок, систему событий и пользовательский
интерфейс.

Организация тестов:
- core/: Тесты компонентов ядра приложения
- test_event_system.py: Тесты системы событий
- test_error_handlers.py: Тесты обработки ошибок
- test_logging.py: Тесты системы логирования
- test_services.py: Тесты сервисов обработки данных и изображений
- test_images.py: Тесты функций обработки изображений
- test_app.py: Тесты основных функций приложения
- test_settings.py: Тесты системы настроек
- test_utils.py: Тесты утилит
- test_stress.py: Стресс-тесты для проверки производительности
- test_data/: Тестовые данные и фикстуры

Общие фикстуры и вспомогательные функции:
- event_bus(): Создает изолированную шину событий для тестов
- app_core(): Инициализирует тестовый экземпляр ядра приложения
- state_manager(): Настраивает менеджер состояния для тестов
- mock_error_handler(): Создает мок обработчика ошибок
- create_test_json(): Генерирует тестовые JSON-данные
- temporary_directory(): Создает временную директорию для тестов

Подходы к тестированию:
- Изоляция внешних зависимостей через мокирование или фикстуры
- Структурированная организация тестов на основе компонентов системы
- Детальное документирование тестовых случаев и результатов
- Использование встроенных ассертов Python и pytest для проверок
- Параметризация тестов для проверки различных входных данных

Запуск тестов:
    $ poetry run pytest              # Запуск всех тестов
    $ poetry run pytest tests/core/  # Запуск тестов только для ядра
    $ poetry run pytest -xvs         # Подробный вывод с трассировкой ошибок
    $ poetry run pytest --cov        # Запуск тестов с отчетом о покрытии

Для добавления новых тестов следуйте существующим шаблонам и убедитесь,
что тесты изолированы, воспроизводимы и включают подробную документацию.
"""
